#! /usr/bin/env perl
# -*- coding: utf-8 -*-
# vim:fenc=utf-8
#
# Copyright (C) 2015-2016 Adrian Perez <aperez@igalia.com>
# Copyright (C) 2016 Nathan Hoad <nathan@getoffmalawn.com>
# Copyright (C) 2018 Robert Stone <talby@trap.mtview.ca.us>
#
# Distributed under terms of the MIT license.

use strict;
use warnings;
use Glib::Object::Introspection ();
Glib::Object::Introspection->setup(
    basename => $_->[0],
    version => $_->[1],
    package => $_->[2],
) for(
    [ qw(Gtk 3.0 Gtk) ],
    [ qw(WebKit2 4.0 WebKit2) ],
);
Gtk::init();
use FindBin ();

my $mydir = $FindBin::Bin;
print("Extension directory: ", $mydir, "\n");

my $ctx = WebKit2::WebContext::get_default();
$ctx->set_web_extensions_directory($mydir);
$ctx->set_web_extensions_initialization_user_data(Glib::Variant->new(
    'a{ss}' => { pl_ext => "$mydir/extension.pm" }
));

my $wnd = Gtk::Window->new('toplevel');
my $web = WebKit2::WebView->new_with_context($ctx);
$wnd->signal_connect("destroy", sub { Gtk::main_quit() });
$wnd->add($web);
$wnd->set_default_size(1152, 800);
$wnd->show_all();

sub on_load_changed {
    my($webview, $event) = @_;
    if($event eq 'finished') {
        $wnd->set_title($webview->get_title());
    } else {
        $wnd->set_title(sprintf "Loading...  %0.1f",
                $webview->get_estimated_load_progress());
    }
}

sub on_load_failed {
    my($webview, $event, $url, $error) = @_;
    print("Error loading ", $url, " - ", $error, "\n");
}

$web->signal_connect("load-changed", \&on_load_changed);
$web->signal_connect("load-failed", \&on_load_failed);

if(@ARGV > 1) {
    $web->load_uri($ARGV[0]);
} else {
    $web->load_uri("http://ddg.gg");
}
Gtk::main();
